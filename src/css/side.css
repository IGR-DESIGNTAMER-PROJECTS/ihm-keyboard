#side {
  display: grid;
  background-color: var(--bg-color);
  grid-template-areas:
    "grid"
    "layout";
  grid-template-rows: 1fr 1fr;
}

#side > div {
  background-color: var(--ui-color);
  color: var(--ui-text-color);
  overflow: hidden;
}

#side label + input {
  display: block;
  margin-top: 0.2em;
}

#side input[type="range"] {
  width: 100%;
  color: var(--ui-text-color);
}

#side > div {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: stretch;
}

#side > div:nth-child(1){
  margin-bottom: 0.3em;
  padding: 0.5em;
}

#side > div:nth-child(2) * {
  margin-left:0.25em;
  margin-right:0.5em;
}

#side button {
  margin-top: auto;
  text-align: center;
  align-self: center;
  justify-self: flex-end;
  margin:0;
}

#side select {
  width: 100%;
  margin: 0.2em;
  margin-top: 1em;
  margin-bottom: 1em;
}

#keys p {
  margin: 0.2em;
  background-color: var(--ui-highlight);
  width: 100%;
  text-indent: 0.5em;
}

.add_key {
  padding: 0;
  display: grid;
  margin: 0.2em;
  width: 100%;
  grid-template-columns: 1fr 9fr;
}

.add_key input{
  max-width: -webkit-fill-available;
  margin:0px !important;
  border-radius: 0 5px 5px 0 !important;
  border:none;
}

#keys p::before {
  content: "- ";
}

/* === range theme and appearance === */
input[type="range"] {
  font-size: 1.5rem;
  width: 12.5em;
}

input[type="range"] {
  color: var(--ui-danger);
  --thumb-height: 0.7em;
  --track-height: 0.125em;
  --track-color: rgba(0, 0, 0, 0.2);
  --brightness-hover: 180%;
  --brightness-down: 80%;
  --clip-edges: 0.125em;
}

input[type="range"].win10-thumb {
  color: #2b2d42;

  --thumb-height: 1.375em;
  --thumb-width: 0.5em;
  --clip-edges: 0.0125em;
}

@media (prefers-color-scheme: dark) {
  html {
    background-color: #000;
  }

  html::before {
    background: radial-gradient(circle at center, #101112, #000);
  }

  input[type="range"] {
    color: #f07167;
    --track-color: rgba(255, 255, 255, 0.1);
  }

  input[type="range"].win10-thumb {
    color: #3a86ff;
  }
}

/* === range commons === */
input[type="range"] {
  position: relative;
  background: #fff0;
  overflow: hidden;
}

input[type="range"]:active {
  cursor: grabbing;
}

input[type="range"]:disabled {
  filter: grayscale(1);
  opacity: 0.3;
  cursor: not-allowed;
}

/* === WebKit specific styles === */
input[type="range"],
input[type="range"]::-webkit-slider-runnable-track,
input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  transition: all ease 100ms;
  height: var(--thumb-height);
}

input[type="range"]::-webkit-slider-runnable-track,
input[type="range"]::-webkit-slider-thumb {
  position: relative;
}

input[type="range"]::-webkit-slider-thumb {
  --thumb-radius: calc((var(--thumb-height) * 0.5) - 1px);
  --clip-top: calc((var(--thumb-height) - var(--track-height)) * 0.5 - 0.5px);
  --clip-bottom: calc(var(--thumb-height) - var(--clip-top));
  --clip-further: calc(100% + 1px);
  --box-fill: calc(-100vmax - var(--thumb-width, var(--thumb-height))) 0 0
    100vmax currentColor;

  width: var(--thumb-width, var(--thumb-height));
  background: linear-gradient(currentColor 0 0) scroll no-repeat left center /
    50% calc(var(--track-height) + 1px);
  background-color: currentColor;
  box-shadow: var(--box-fill);
  border-radius: var(--thumb-width, var(--thumb-height));

  filter: brightness(100%);
  clip-path: polygon(
    100% -1px,
    var(--clip-edges) -1px,
    0 var(--clip-top),
    -100vmax var(--clip-top),
    -100vmax var(--clip-bottom),
    0 var(--clip-bottom),
    var(--clip-edges) 100%,
    var(--clip-further) var(--clip-further)
  );
}

input[type="range"]:hover::-webkit-slider-thumb {
  filter: brightness(var(--brightness-hover));
  cursor: grab;
}

input[type="range"]:active::-webkit-slider-thumb {
  filter: brightness(var(--brightness-down));
  cursor: grabbing;
}

input[type="range"]::-webkit-slider-runnable-track {
  background: linear-gradient(var(--track-color) 0 0) scroll no-repeat center /
    100% calc(var(--track-height) + 1px);
}

input[type="range"]:disabled::-webkit-slider-thumb {
  cursor: not-allowed;
}

/* === Firefox specific styles === */
input[type="range"],
input[type="range"]::-moz-range-track,
input[type="range"]::-moz-range-thumb {
  appearance: none;
  transition: all ease 100ms;
  height: var(--thumb-height);
}

input[type="range"]::-moz-range-track,
input[type="range"]::-moz-range-thumb,
input[type="range"]::-moz-range-progress {
  background: #fff0;
}

input[type="range"]::-moz-range-thumb {
  background: currentColor;
  border: 0;
  width: var(--thumb-width, var(--thumb-height));
  border-radius: var(--thumb-width, var(--thumb-height));
  cursor: grab;
}

input[type="range"]:active::-moz-range-thumb {
  cursor: grabbing;
}

input[type="range"]::-moz-range-track {
  width: 100%;
  background: var(--track-color);
}

input[type="range"]::-moz-range-progress {
  appearance: none;
  background: currentColor;
  transition-delay: 30ms;
}

input[type="range"]::-moz-range-track,
input[type="range"]::-moz-range-progress {
  height: calc(var(--track-height) + 1px);
  border-radius: var(--track-height);
}

input[type="range"]::-moz-range-thumb,
input[type="range"]::-moz-range-progress {
  filter: brightness(100%);
}

input[type="range"]:hover::-moz-range-thumb,
input[type="range"]:hover::-moz-range-progress {
  filter: brightness(var(--brightness-hover));
}

input[type="range"]:active::-moz-range-thumb,
input[type="range"]:active::-moz-range-progress {
  filter: brightness(var(--brightness-down));
}

input[type="range"]:disabled::-moz-range-thumb {
  cursor: not-allowed;
}

#svg_edit {
  cursor: pointer;
  position: absolute;
  width: 100%;
  height: auto;
  border-radius: 5px;
  background-color: var(--ui-highlight);
  border: none;
  outline: none;
  box-shadow: none;
  text-align: center;
  align-self: center;
  margin-top: 1em;
  left: 50%;
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  padding: 0.3em;
  max-width: 10em;
}

#key_add {
  background-color: var(--ui-highlight);
  padding: 0 0.5em 0 0.5em;
  margin-right:0 !important;
  border-radius: 5px 0 0 5px;
}

#key_add:hover {
  background-color: var(--bg-color);

}

#keys {
  padding-left: 0px;
  margin-right: 0px !important;
  padding-top:0.5em;
  padding-bottom: 0.5em;
}

#keys > * {
  width:100%;
  overflow:hidden;
}

.key_list {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-content: center;
  justify-content: flex-start;
  align-items: center;
  max-height: 7em;
  padding-top:0.2em;
  padding-bottom:0.2em;
  gap:0.4em;
  background-color: var(--bg-color);
  border-radius: 10px 0px 0px 10px;
  margin-left:0.5em !important;
  margin-bottom:0.5em;
  padding: 0.5em 0 0.5em 0;
  min-height: 0.5em;
}

.key_block{
  display:grid;
  width: 90%;
  grid-template-columns: 1fr 4fr;
}

.key_block > button{
  width:100%;
  max-width:unset;
}

.key_list:has(template:nth-child(1):last-child)::before{
  content:"Keys will be listed here";
  font-size: 100%;
}

.key_button{
  border: none;
  outline: none;
  box-shadow: none;
  max-width:70%;
  border-radius:10px;
  pointer-events: none;
}

.key_button:active{
  opacity:100%;
}

.delete {
  background-color: unset;
  display: flex;
  align-content: center;
  align-items: center;
  justify-content: center;
  flex-wrap: nowrap;
  flex-direction: column;
}

.delete img{
  width:80%;
  height:80%;
  margin:0 !important;
}

.delete:hover{
  background-color: var(--ui-danger);
  transition: all ease 100ms;
}

.delete:hover img{
  filter:grayscale(100%) brightness(0%);
  transition: all ease 500ms;
}
